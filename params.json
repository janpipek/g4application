{"name":"G4application","tagline":"A simple generic modular application for Geant 4.","body":"g4application\r\n=============\r\n\r\nA simple generic application for Geant 4. It works as a universal executable\r\nfor geant4 tasks. It provides a plugin API which is used to implement\r\nspecific behaviour (in one or more plugins in parallel).\r\n\r\nApart from this, g4application offers features that are not tightly connected\r\nto plugin system but can make your life with Geant4 easier.\r\n\r\nMain features\r\n-------------\r\n* typical macro-based / interactive workflow\r\n* plugins\r\n* configuration system - central configuration repository based on observer design pattern\r\n* composite user action - these allow adding of more user actions of the same type\r\n* a few built-in user actions (see below)\r\n\r\nBuilt-in user actions\r\n---------------------\r\nYou can use a few user actions included in the application.\r\nThey are loaded using `/app/addAction <actionname>` command\r\n* NumberingEventAction - prints a short status after each N events\r\n* MemoryRunAction - prints info about memory consumption before/after run\r\n\r\nPlugin system\r\n-------------\r\n**TODO: describe**\r\n\r\nLoading a plugin\r\n~~~~~~~~~~~~~~~~\r\n   /app/plugin/load <somePlugin.so>\r\n\r\n\r\nExamples\r\n~~~~~~~~\r\nThere are a few example plugins that use most features of G4Application in the\r\nexamples/ subdirectory.\r\n\r\n- simplePlugin : basic example that defines physics, geometry & generator\r\n- httpPlugin : a simple integrated HTTP server informing about the application state\r\n\r\n\r\nHow to build\r\n------------\r\nYou will need:\r\n* cmake >= 2.6 (not tested for lower) \r\n* geant4 (9.6 used for development)\r\n* boost > 0.49\r\n\r\nOptional:\r\n* qt4\r\n\r\nAfter building, you will obtain:\r\n* g4 executable - this you will run\r\n* libg4Application.so shared library - you will need to link your plugins against this library (the aim is to remove this necessity)\r\n\r\nEnvironment variables (alternatively can be set as CMake variables):\r\n* G4APP_PATH - when you set this (optional), the built libraries and executable will be copied there. \r\n* G4APP_SOURCE_PATH - if you use the provided FindG4Application.cmake (when building your modules),\r\n    this path is used for searching libraries and include directories of g4application (required).\r\n\r\nBuilding tested on Linux (Fedora Core 18, Scientific Linux 6.4), tests on other platforms are welcome.\r\n\r\nHistory & Motivation\r\n--------------------\r\n2010-2012: I was developing two similar models of Leksell Gamma Knife at a same time and I wanted them to share\r\na lot of code. In the end, I made the application call the plugin instead of two application\r\nusing the same library.\r\n\r\n2013: I hope that the application is universal enough to be used in other environments.\r\n\r\nContact\r\n-------\r\nI'd be happy to accept feature requests, cooperation, questions, bug reports...\r\nPlease write to jan.pipek AT gmail.com\r\n\r\nLinks\r\n-----\r\n* https://github.com/janpipek/g4application\r\n* http://janpipek.github.io/g4application/\r\n\r\nOther Useful Tools\r\n------------------\r\nscoring_browser - tool for the visualization of scoring files ( http://janpipek.github.io/scoring_browser/ )\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}